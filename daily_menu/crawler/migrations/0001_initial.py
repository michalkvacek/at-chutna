# Generated by Django 2.1.4 on 2019-05-04 06:53

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('restaurants', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('canonical_name', models.CharField(blank=True, help_text='Canonical form generated by czech analyzer in ElasticSearch', max_length=256, null=True)),
                ('is_significant', models.BooleanField(default=True)),
                ('is_common', models.BooleanField(default=False, help_text='Is this ingredient common?')),
            ],
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('url', models.CharField(help_text='Source URL', max_length=4096)),
            ],
        ),
        migrations.CreateModel(
            name='RecipeCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('canonical_name', models.CharField(blank=True, help_text='Canonical form generated by czech analyzer in ElasticSearch', max_length=256, null=True)),
                ('is_significant', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='RecipeIngredientCrawler',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Human readable crawler's name", max_length=256)),
                ('crawler_class', models.CharField(help_text='Class used for crawling', max_length=256, unique=True)),
                ('next_visit', models.DateField(blank=True, help_text="Date of next crawler's visit", null=True)),
                ('next_visit_interval', models.IntegerField(default=1, help_text='How ofter this site with recipes should be visited? Interval in days.')),
            ],
        ),
        migrations.CreateModel(
            name='RestaurantScrapperConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('menu_parser', models.CharField(blank=True, help_text='Class used for parsing menu', max_length=256, null=True)),
                ('parser_parameters', models.CharField(blank=True, help_text='Parameters used for menu parser', max_length=4096, null=True)),
                ('next_visit', models.DateField(blank=True, help_text="Date of next crawler's visit", null=True)),
                ('next_visit_interval', models.IntegerField(default=1, help_text='How ofter should this menu be visited? Interval in days.')),
                ('active', models.BooleanField(default=True)),
                ('last_successful_download', models.DateField(blank=True, help_text='Last successfull menu download', null=True)),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurants.Restaurant')),
            ],
        ),
        migrations.AddField(
            model_name='recipecategory',
            name='downloaded_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crawler.RecipeIngredientCrawler'),
        ),
        migrations.AddField(
            model_name='recipe',
            name='categories',
            field=models.ManyToManyField(to='crawler.RecipeCategory'),
        ),
        migrations.AddField(
            model_name='recipe',
            name='downloaded_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crawler.RecipeIngredientCrawler'),
        ),
        migrations.AddField(
            model_name='recipe',
            name='ingredients',
            field=models.ManyToManyField(to='crawler.Ingredient'),
        ),
    ]
